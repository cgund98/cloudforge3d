FROM ubuntu:22.04 as builder

WORKDIR /app

ENV DEBIAN_FRONTEND=noninteractive
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

RUN apt-get update && apt-get install -y \
    python3.11 \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN pip install poetry==1.7.1

COPY job-runner/pyproject.toml job-runner/poetry.lock ./
RUN touch README.md

RUN poetry install --only main --no-root && rm -rf $POETRY_CACHE_DIR

FROM ubuntu:22.04 as runner

ENV DEBIAN_FRONTEND=noninteractive

# This image was sourced from: https://github.com/ranchcomputing/blender-cpu-image
RUN apt-get update && apt-get install -y \
    wget \
	xz-utils \
    libxcb1 \
    libxext6 \
    libx11-6 \
    libxi6 \
    libxfixes3 \
    libxrender1 \
    libxxf86vm1 \
    libgl1-mesa-glx \
    libxkbcommon0 \
    libsm6 \
    python3.11 \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

ARG BLENDER_MIRROR=https://mirror.clarkson.edu/blender/release
ARG BLENDER_VERSION=4.2.2
ARG BLENDER_MAJOR

RUN export BLENDER_MAJOR="${BLENDER_MAJOR:-${BLENDER_VERSION%.*}}" \
    && echo ${BLENDER_MIRROR}/Blender${BLENDER_MAJOR}/blender-${BLENDER_VERSION}-linux-x64.tar.xz && \
    wget --no-verbose --show-progress --progress=dot:giga \
    ${BLENDER_MIRROR}/Blender${BLENDER_MAJOR}/blender-${BLENDER_VERSION}-linux-x64.tar.xz \
	&& tar -xvf blender-${BLENDER_VERSION}-linux-x64.tar.xz --strip-components=1 -C /bin \
	&& rm -rf blender-${BLENDER_VERSION}-linux-x64.tar.xz \
	&& rm -rf blender-${BLENDER_VERSION}-linux-x64

RUN blender --version

ENV VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

COPY --from=builder ${VIRTUAL_ENV} ${VIRTUAL_ENV}

WORKDIR /app

COPY job-runner/runner ./runner

# Set the working directory
ENTRYPOINT ["python", "-m", "runner.cmd.render_cpu"]
